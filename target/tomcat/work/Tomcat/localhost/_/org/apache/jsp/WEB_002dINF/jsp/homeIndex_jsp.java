/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.30
 * Generated at: 2015-07-24 11:47:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class homeIndex_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <base href=\"");
      out.print(basePath);
      out.write("\">\r\n");
      out.write("    \r\n");
      out.write("    <title>我的小屋</title>\r\n");
      out.write("    \r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("    <meta content=\"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no,minimal-ui\" name=\"viewport\">\r\n");
      out.write("    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\r\n");
      out.write("    <meta content=\"telephone=no\" name=\"format-detection\">\r\n");
      out.write("    <!-- UC默认竖屏 ，UC强制全屏 -->\r\n");
      out.write("    <meta name=\"full-screen\" content=\"yes\">\r\n");
      out.write("    <meta name=\"browsermode\" content=\"application\">\r\n");
      out.write("    <!-- QQ强制竖屏 QQ强制全屏 -->\r\n");
      out.write("    <meta name=\"x5-orientation\" content=\"portrait\">\r\n");
      out.write("    <meta name=\"x5-fullscreen\" content=\"true\">\r\n");
      out.write("    <meta name=\"x5-page-mode\" content=\"app\">\r\n");
      out.write("    <meta name=\"keywords\" content=\"\">\r\n");
      out.write("    <meta name=\"description\" content=\"\">\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("  </head>\r\n");
      out.write("  \r\n");
      out.write("  <body>\r\n");
      out.write("    欢迎光临");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("的s小屋\r\n");
      out.write("\t<button id=\"postBtn\">postTest</button> \r\n");
      out.write("  </body>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"/fe/js/lib/zepto-1.1.4.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("  \tvar api = (function(){\r\n");
      out.write("    /**\r\n");
      out.write("     * @param useMock {Boolean} 是否使用测试桩。\r\n");
      out.write("     */\r\n");
      out.write("    return function(t, params, callback, useMock,method){\r\n");
      out.write("        if(!callback){\r\n");
      out.write("            callback=$.noop;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        var doneFns=[];\r\n");
      out.write("        var stepFns=[callback];\r\n");
      out.write("\r\n");
      out.write("        var e={\r\n");
      out.write("            done:function(fn){\r\n");
      out.write("                doneFns.push(fn);\r\n");
      out.write("                return this;\r\n");
      out.write("            },\r\n");
      out.write("            on:function(fn){\r\n");
      out.write("                stepFns.push(fn);\r\n");
      out.write("                return this;\r\n");
      out.write("            },\r\n");
      out.write("            resolve:function(){\r\n");
      out.write("                e.status='done';\r\n");
      out.write("                for (var i = 0; i < doneFns.length; i++) {\r\n");
      out.write("                    doneFns[i].apply(e,arguments);\r\n");
      out.write("                }\r\n");
      out.write("                return this;\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("        var ajaxOption={\r\n");
      out.write("            url : t,\r\n");
      out.write("            type : method||'GET',\r\n");
      out.write("            data : params,\r\n");
      out.write("            contentType:\"application/json; charset=UTF-8\",\r\n");
      out.write("            dataType : 'json',\r\n");
      out.write("            timeout : 3e4,\r\n");
      out.write("            success : function(res){\r\n");
      out.write("                // 当接口挂了\r\n");
      out.write("                e.status='';\r\n");
      out.write("                for (var i = 0; i < stepFns.length; i++) {\r\n");
      out.write("                    stepFns[i].call(e,res.bstatus&&res.bstatus.code==0,res.bstatus&&res.bstatus.des,res.data,res);\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            error : function(res){\r\n");
      out.write("                e.status='fail';\r\n");
      out.write("                // time out 的status 也是0\r\n");
      out.write("                for (var i = 0; i < stepFns.length; i++) {\r\n");
      out.write("                    stepFns[i].call(e,-res.status||-1,'网络错误',res.responseText);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("        if(useMock){// 使用测试桩数据\r\n");
      out.write("            ajaxOption.url = '/pc/js/mock/' + t + '.json' + '?rdm=' + Math.random();\r\n");
      out.write("            ajaxOption.type = 'GET';\r\n");
      out.write("        }\r\n");
      out.write("        e.retry=function(){\r\n");
      out.write("            if(e.status==='loading'){\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            e.status='loading';\r\n");
      out.write("            e.ajax=$.ajax(ajaxOption);\r\n");
      out.write("            return this;\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        e.retry();\r\n");
      out.write("        return e;\r\n");
      out.write("    };\r\n");
      out.write("})();\r\n");
      out.write("\tvar data = '<xml> <ToUserName><![CDATA[toUser]]></ToUserName> <FromUserName><![CDATA[fromUser]]></FromUserName> <CreateTime>1348831860</CreateTime> <MsgType><![CDATA[image]]></MsgType> <PicUrl><![CDATA[this is a url]]></PicUrl> <MediaId><![CDATA[media_id]]></MediaId> <MsgId>1234567890123456</MsgId> </xml>';\r\n");
      out.write("  \tapi(\"/lovelulu/wx/index\",data,function(flag,des,data,res){\r\n");
      out.write("  \t\t\r\n");
      out.write("  \t},false,\"POST\");\r\n");
      out.write("  </script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /WEB-INF/jsp/homeIndex.jsp(34,8) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${name}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }
}
